hydra:
  run:
    dir: ./logs/runs/${hydra.job.override_dirname}
  sweep:
    dir: ./logs/sweeps/${name}_${now:%Y-%m-%d_%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - model.encoder.num_attention_layers=2,3,4,5,6
  job:
    name: train
    chdir: null
    override_dirname: model.encoder.num_attention_layers=2,3,4,5,6
    id: ???
    num: ???
    config_name: defaults
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.2.0
    version_base: '1.2'
    cwd: /mnt/hpc/home/naehert/projects/SODeep
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /mnt/hpc/home/naehert/projects/SODeep/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      loss: base
      trainer: base
      datamodule: base
      model: base
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
model:
  _target_: model.BaseModel
  encoder:
    _target_: networks.TransformerEncoderModel
    resblock_config:
    - in_filters: 1
      out_filters: 16
      dilation: 1
      is_resid: true
    - in_filters: 16
      out_filters: 16
      dilation: 2
    - in_filters: 16
      out_filters: 32
      dilation: 4
    - in_filters: 32
      out_filters: 32
      dilation: 8
    - in_filters: 32
      out_filters: 32
      dilation: 16
    nhead: 8
    num_attention_layers: 2
    dim_feedforward: 128
    dropout: 0.1
    return_valid: true
  decoder:
    _target_: networks.LinearDecoder
    input_dim: 128
    intermediate_dim: 128
    num_classes: 3
  loss_fn:
    _target_: losses.CEtransitionLoss
    smoothness_weight: 0.2
    transition_penalty_weight: 0
    label_smoothing: 0.05
  learning_rate: 0.001
  weight_decay: 1.0e-05
  return_valid: false
  lr_scheduler_config:
    step_size: 5
    gamma: 0.75
datamodule:
  _target_: dataset.WindowedEEGDataModule
  window_length: 150
  batch_size: 256
  num_workers: 6
  train_dir: data/processed/train
  val_dir: data/processed/val
  test_dir: data/processed/test
  stride: 50
  keep_ratio: 1.5
  apply_savgol: 0
  deriv: 0
  transforms:
  - _target_: utils.transforms.population_zscore_transform
trainer:
  min_epochs: 15
  max_epochs: 50
  log_every_n_steps: 1
loss:
  smoothness_weight: 0.2
  transition_penalty_weight: 0
  label_smoothing: 0.05
name: SOD_trans-lin_comp-attention_lay
